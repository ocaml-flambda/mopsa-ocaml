let functions = [
  (* Functions *)
  "abs";
  "all";
  "any";
  "ascii";
  "bin";
  "callable";
  "chr";
  "classmethod";
  "compile";
  "delattr";
  "dir";
  "divmod";
  "enumerate";
  "eval";
  "exec";
  "filter";
  "format";
  "getattr";
  "globals";
  "hasattr";
  "hash";
  "help";
  "hex";
  "id";
  "input";
  "isinstance";
  "issubclass";
  "iter";
  "len";
  "locals";
  "map";
  "max";
  "memoryview";
  "min";
  "next";
  "oct";
  "open";
  "ord";
  "pow";
  "print";
  "repr";
  "reversed";
  "round";
  "setattr";
  "sorted";
  "staticmethod";
  "sum";
  "super";
  "vars";
  "zip";
  "__import__"
]

(* Exceptions *)
let  exceptions = [ 
  "BaseException";  
  "Exception";
  "AssertionError";
  "AttributeError";
  "StopIteration";
  "SyntaxError";
  "TypeError";
  "ValueError";
  "NameError";
  "UnboundLocalError";
  "LookupError";
  "IndexError";
  "RuntimeError";
  "KeyError";
  "MemoryError";
  "OverflowError";
  "ZeroDivisionError";
  "DeprecationWarning";
  "UnicodeEncodeError";
  "RecursionError";
  "SystemError";
  "BufferError";
  "ArithmeticError";
  "EOFError";
  "FloatingPointError";
  "GeneratorExit";
  "ImportError";
  "ModuleNotFoundError";
  "KeyboardInterrupt";
  "NotImplementedError";
  "OSError";
  "ReferenceError";
  "StopAsyncIteration";
  "IndentationError";
  "TabError";
  "SystemExit";
  "UnicodeError";
  "UnicodeDecodeError";
  "UnicodeTranslateError";
  "EnvironmentError";
  "IOError";
  "WindowsError";
  "BlockingIOError";
  "ChildProcessError";
  "ConnectionError";
  "BrokenPipeError";
  "ConnectionAbortedError";
  "ConnectionRefusedError";
  "ConnectionResetError";
  "FileExistsError";
  "FileNotFoundError";
  "InterruptedError";
  "IsADirectoryError";
  "NotADirectoryError";
  "PermissionError";
  "ProcessLookupError";
  "TimeoutError";
  "Warning";
  "UserWarning";
  "PendingDeprecationWarning";
  "SyntaxWarning";
  "RuntimeWarning";
  "FutureWarning";
  "ImportWarning";
  "UnicodeWarning";
  "BytesWarning";
  "ResourceWarning";
]

  (* Classes *)
let classes = [
  "bool";
  "bytearray";
  "bytes";
  "complex";
  "dict";
  "float";
  "frozenset";
  "int";
  "list";
  "listiter";
  "object";
  "property";
  "range";
  "rangeiter";
  "set";
  "slice";
  "str";
  "tuple";
  "tupleiter";
  "type";
  "xrange"
]

let vars = [
  "__name__";
  "__file__"
]

let decorators = [
  "trackCall";
  "classmethod";
  "staticmethod"
]

let all = functions @ exceptions @ classes @ vars @ decorators
