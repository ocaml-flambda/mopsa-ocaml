description = "Modular and Open Platform for Static Analysis"
version = "@version@"

package "utils" (
        description = "MOPSA utilities"
        requires = "str yojson gmp apron apron.boxMPQ apron.octMPQ apron.polkaMPQ zarith threads"
        version = "@version@"
        archive(byte) = "utils.cma"
        archive(native) = "utils.cmxa"
)

package "universal_parser" (
        description = "Parser for MOPSA's Universal toy-language"
        requires = "str yojson gmp apron apron.boxMPQ apron.octMPQ apron.polkaMPQ zarith threads mopsa.utils"
        version = "@version@"
        archive(byte) = "mlUniversalParser.cma"
        archive(native) = "mlUniversalParser.cmxa"
)

package "clang_parser" (
        description = "Clang-based C parser"
        requires = "str yojson gmp apron apron.boxMPQ apron.octMPQ apron.polkaMPQ zarith threads mopsa.utils"
        version = "@version@"
        archive(byte) = "mlClangParser.cma"
        archive(native) = "mlClangParser.cmxa"
)

package "cstub_parser" (
        description = "Parser for MOPSA's language for C stubs"
        requires = "str yojson gmp apron apron.boxMPQ apron.octMPQ apron.polkaMPQ zarith threads mopsa.utils"
        version = "@version@"
        archive(byte) = "mlCStubsParser.cma"
        archive(native) = "mlCStubsParser.cmxa"
)

package "python_parser" (
        description = "Parser for Python 3.x"
        requires = "str yojson gmp apron apron.boxMPQ apron.octMPQ apron.polkaMPQ zarith threads mopsa.utils"
        version = "@version@"
        archive(byte) = "mlPythonParser.cma"
        archive(native) = "mlPythonParser.cmxa"
)

package "analyzer" (
        description = "MOPSA analyzer engine"
        requires = "str yojson gmp apron apron.boxMPQ apron.octMPQ apron.polkaMPQ zarith threads @meta_analyzer_requires@"
        version = "@version@"
        archive(byte) = "mopsaLib.cma"
        archive(native) = "mopsaLib.cmxa"
)
