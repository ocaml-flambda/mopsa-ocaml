#!/bin/bash

export SHELL=$(type -p bash)
MOPSADIR="$(cd "$(dirname "$0")" && pwd -P)/../.."
juliet=$1/C/testcases

# cwes="\
#    CWE121_Stack_Based_Buffer_Overflow \
#    CWE122_Heap_Based_Buffer_Overflow \
#    CWE123_Write_What_Where_Condition \
#    CWE124_Buffer_Underwrite \
#    CWE126_Buffer_Overread \
#    CWE127_Buffer_Underread \
#    CWE190_Integer_Overflow \
#    CWE191_Integer_Underflow \
#    CWE369_Divide_by_Zero \
#    CWE457_Use_of_Uninitialized_Variable \
#    CWE476_NULL_Pointer_Dereference \
#    CWE562_Return_of_Stack_Variable_Address"

# CWE476_NULL_Pointer_Dereference \
cwes="CWE190_Integer_Overflow/s01 CWE190_Integer_Overflow/s02"

allcases=()
# for cwe in ${cwes}; do
for cwe in `cat ./scripts/juliet/bench_input/input`; do
    directory=${juliet}/${cwe}
    cases=$(find ${directory} -regextype posix-egrep -regex ".*[0-9]a?\.c" | sed "s/a\.c/\.c/" | sed "s/\.c//" | sort)
    for c in ${cases}; do
        allcases+=($c)
    done
done
output="bench/out.json"
echo "[" > ${output}
parallel --no-notice --eta ${MOPSADIR}/scripts/juliet/mopsa-juliet-case-bench {} ::: ${allcases[@]} >> ${output}
sed -i '$ s/.$//' ${output}
echo "]" >> ${output}
