#!/bin/bash

MOPSADIR="$(cd "$(dirname "$0")" && pwd -P)/../.."

juliet=$1/C/testcases

# cwes="\
#    CWE121_Stack_Based_Buffer_Overflow \
#    CWE122_Heap_Based_Buffer_Overflow \
#    CWE123_Write_What_Where_Condition \
#    CWE124_Buffer_Underwrite \
#    CWE126_Buffer_Overread \
#    CWE127_Buffer_Underread \
#    CWE190_Integer_Overflow \
#    CWE191_Integer_Underflow \
#    CWE369_Divide_by_Zero \
#    CWE457_Use_of_Uninitialized_Variable \
#    CWE476_NULL_Pointer_Dereference \
#    CWE562_Return_of_Stack_Variable_Address"

# CWE476_NULL_Pointer_Dereference \
cwes="CWE190_Integer_Overflow"
subdirs="s01 s02"
N=$2
rm -rf .output
mkdir .output
for cwe in ${cwes}; do
    for subd in ${subdirs}; do
        directory=${juliet}/${cwe}/${subd}
        cases=$(find ${directory} -regextype posix-egrep -regex ".*[0-9]a?\.c" | sed "s/a\.c/\.c/" | sed "s/\.c//" | sort)
        for c in ${cases}; do
            ((i=i%N)); ((i++==0)) && wait
            ${MOPSADIR}/scripts/juliet/mopsa-juliet-case-bench ${c} >> .output/OUT.$i &
        done

    done
done
rm -rf .output
outputdir="bench"
output="bench/out.json"
mkdir ${outputdir}

echo "[" > ${output}
for i in `seq 1 ${N}`; do
    cat .output/OUT.$i >> ${output}
done
sed -i '$ s/.$//' ${output}
echo "]" >> ${output}
